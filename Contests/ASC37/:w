#include <bits/stdc++.h>

using namespace std;
#define fst first
#define snd second
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
#define pb push_back
#define for_tests(t, tt) int t; scanf("%d", &t); for(int tt = 1; tt <= t; tt++)

template <typename T> void write(ostream& out, T t) {
	out << t << "\n";
}
template <typename T, typename... Args>
void write(ostream& out, T t, Args... args) {
	out << t << ' ';
	write(out, args...);
}

template <typename... Args>
void debug(Args... args) {
	#ifdef LOCAL
		write(cerr, args...);
	#endif
}


template<typename T> inline T abs(T t) { return t < 0? -t : t; }
const ll modn = 1000000007;
inline ll mod(ll x) { return x % modn; }

const int MAXN = 212345;

int n, m, k;
int s[MAXN];

void prep_cin(){
	ios::sync_with_stdio(false);
	cin.tie(0);
}

void euler_dfs(int u){
	temp_path[tsz++] = v;
	while(!adj[v].empty()){
		vv = adj[v].back();
		adj[v].pop_back();
		euler_dfs(vv);
	}
	final_path[fsz++] = temp_path[--tsz];
}

void test(int c){
	for(int a=1;a<=c;a++){
		for(int b=a+1;b<=c;b++){
			adj[a].pb(b);	
			adj[b].pb(a);
		}
	}
	if(!(c&1)){
		for(int a=1;a<=c;a+=2){
			adj[a].pb(a+1);
			adj[a+1].pb(a);
		}
	}

		
}

int main (){
	scanf("%d", &n);

	if(n == 4){
		puts("2");
		puts("1 2 1 2");
		return 0;
	}

	int c = 3;
	while(1){
		int sz = (c*(c-1))/2 + ((sz&1) ? 0 : c/2-1);
		if(sz > n) break;
		c++;
	}
	
	test(c);
	test(c-1);
}

