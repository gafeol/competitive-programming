#include <bits/stdc++.h>
using namespace std;
#define fst first
#define snd second
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
#define pb push_back
#define for_tests(t, tt) int t; scanf("%d", &t); for(int tt = 1; tt <= t; tt++)
#ifndef ONLINE_JUDGE
#define debug(args...) fprintf(stderr,args)
#else
#define debug(args...)
#endif //ONLINE_JUDGE
template<typename T> inline T abs(T t) { return t < 0? -t : t; }
const ll modn = 1000000007;
inline ll mod(ll x) { return x % modn; }

const int MAXN = 112345;

int n, m, k;
int s[MAXN];

struct arv{
	int mn, sum, lz;

	arv(){}
	arv(int mm, int ss, int ll){
		mn = mm;
		sum = ss;
		lz = ll;
	}

} tree[4*MAXN];

void upd(int idx, int i, int j, int l, int r, int t){
	if(i > r || j < l) return ;
	if(tree[idx].lz != 0){
		int aux = tree[idx].lz;
		tree[idx].lz = 0;
		if(i != j){
			tree[idx*2].lz += aux;
			tree[idx*2].sum += aux;
			tree[idx*2+1].lz += aux;
			tree[idx*2+1].lz += aux;
		}
	}
	if(i >= l && j <= r){
		tree[idx].lz = t;
	}
}

void go(int t){
	for(int a=0;a<MAXN*4;a++){
		tree[a] = arv(0, 0, 0);
	}
}

int main (){
	for_tests(t, tt){
		scanf("%d", &n);
		for(int a=0;a<n;a++){
			scanf("%d %d", &s[a].fst, &s[a].snd);
		}
		int i = 0, j = 2000100;
		while(i < j){
			int m = (i + j + 1)>>1;
			if(go(m))
				i = m
			else
				j = m - 1;
		}
	}
}
